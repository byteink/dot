{
/*
	// Place your snippets for C++ here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
	"namespace": {
		"prefix": "ns",
		"body": [
			"namespace $1 {",
			"} /* namespace $1 */"
		],
		"description": "namespace"
	},

	"include": {
		"prefix": "inc",
		"body": [
			"#include <$1>"
		],
		"description": "include header"
	},

	"main": {
		"prefix": "main",
		"body": [
			"int main(int argc, char *argv[]) {",
			"}"
		],
		"description": "c++ main function"
	},

	"cout": {
		"prefix": "cout",
		"body": [
			"std::cout << $1 << std::endl;"
		],
		"description": "c++ cout"
	},

	"cerr": {
		"prefix": "cerr",
		"body": [
			"std::cerr << $1 << std::endl;"
		],
		"description": "c++ cerr"
	},

	"once": {
		"prefix": "once",
		"body": [
			"#ifndef $1_H_",
			"#define $1_H_",
			"#endif /* end of include guard: $1_H_ */"
		],
		"description": "header include guard"
	}
}
